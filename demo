(summer) Weis-MacBook-Air:~ patrick$ python 3
python: can't open file '3': [Errno 2] No such file or directory
(summer) Weis-MacBook-Air:~ patrick$ python3
Python 3.6.5 |Anaconda, Inc.| (default, Apr 26 2018, 08:42:37) 
[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import numpy as np 
>>> import pandas as pd
>>> import sklearn
>>> from sklearn.cross_validaiton import train_test_split
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ModuleNotFoundError: No module named 'sklearn.cross_validaiton'
>>> ls
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'ls' is not defined
>>> ls ..
  File "<stdin>", line 1
    ls ..
        ^
SyntaxError: invalid syntax
>>> cd
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cd' is not defined
>>> python 3
  File "<stdin>", line 1
    python 3
           ^
SyntaxError: invalid syntax
>>> python3
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'python3' is not defined
>>> exit()
(summer) Weis-MacBook-Air:~ patrick$ python 3
python: can't open file '3': [Errno 2] No such file or directory
(summer) Weis-MacBook-Air:~ patrick$ python3
Python 3.6.5 |Anaconda, Inc.| (default, Apr 26 2018, 08:42:37) 
[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import numpy as np
>>> import pandas as pd
>>> from sklearn.cross_validation import train_test_score
/Users/patrick/miniconda3/envs/summer/lib/python3.6/site-packages/sklearn/cross_validation.py:41: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.
  "This module will be removed in 0.20.", DeprecationWarning)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ImportError: cannot import name 'train_test_score'
>>> import sklearn
>>> from sklearn.cross_validation import train_test_split
>>> from sklearn.tree import DecisionTreeClassifier
>>> from sklearn.metrics import accuracy_score
>>> from sklearn import tree
>>> balance_data = pd.read_csv(
... https://archive.ics.uci.edu/ml/machine-learning-databases/balance-scale/balance-scale.data
  File "<stdin>", line 2
    https://archive.ics.uci.edu/ml/machine-learning-databases/balance-scale/balance-scale.data
         ^
SyntaxError: invalid syntax
>>> balance_data = pd.read_csv(
... 'https://archive.ics.uci.edu/ml/machine-learning-databases/balance-scale/balance-scale.data',
...                            sep= ',', header= None)
>>> print "Dataset Lenght:: "," len(balance_data) 
  File "<stdin>", line 1
    print "Dataset Lenght:: "," len(balance_data) 
                            ^
SyntaxError: invalid syntax
>>> 
>>> 2
2
>>> print "Dataset Lenght:: ", len(balance_data)
  File "<stdin>", line 1
    print "Dataset Lenght:: ", len(balance_data)
                            ^
SyntaxError: invalid syntax
>>> 
>>> 2
2
>>> print "Dataset Lenght:: ", len(balance_data)
  File "<stdin>", line 1
    print "Dataset Lenght:: ", len(balance_data)
                            ^
SyntaxError: invalid syntax
>>> print "Dataset Length:: ", len(balance_data) 
  File "<stdin>", line 1
    print "Dataset Length:: ", len(balance_data) 
                            ^
SyntaxError: invalid syntax
>>> print "Dataset Length:: len(balance_data) 
  File "<stdin>", line 1
    print "Dataset Length:: len(balance_data) 
                                             ^
SyntaxError: EOL while scanning string literal
>>> print "Dataset Shape:: ", balance_data.shape
  File "<stdin>", line 1
    print "Dataset Shape:: ", balance_data.shape
                           ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print("Dataset Shape:: ", balance_data.shape)?
>>> print ("Dataset Lenght:: ", len(balance_data)) 
Dataset Lenght::  625
>>> print ("Dataset Shape:: ", balance_data.shape) 
Dataset Shape::  (625, 5)
>>> print ("Dataset::) 
  File "<stdin>", line 1
    print ("Dataset::) 
                      ^
SyntaxError: EOL while scanning string literal
>>> print ("Dataset:: ") 
Dataset:: 
>>> print "Dataset:: " 
  File "<stdin>", line 1
    print "Dataset:: " 
                     ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print("Dataset:: ")?
>>> print ("Dataser:: " 
... print ("Dataser:: " 
  File "<stdin>", line 2
    print ("Dataser:: " 
        ^
SyntaxError: invalid syntax
>>> print ("Dataser:: ")  
Dataser:: 
>>> balance_data.head() 
   0  1  2  3  4
0  B  1  1  1  1
1  R  1  1  1  2
2  R  1  1  1  3
3  R  1  1  1  4
4  R  1  1  1  5
>>> X = balance_data.values[:, 1:5] 
>>> Y = balance_data.values[:,0]
>>> X_train, X_test, y_train, y_test = train_test_split( X, Y, test_size = 0.3, random_state = 100) 
>>> clf_gini = DecisionTreeClassifier(criterion = "gini", random_state = 100, max_depth=3, min_samples_leaf=5) 
>>> clf_gini.fit(X_train, y_train)
DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=3,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=100,
            splitter='best')
>>> clf_entropy = DecisionTreeClassifier(criterion = "entropy", random_state = 100, max_depth=3, min_samples_leaf=5) 
>>> clf_entropy.fit(X_train, y_train) 
DecisionTreeClassifier(class_weight=None, criterion='entropy', max_depth=3,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=100,
            splitter='best')
>>> import pydotplus
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ModuleNotFoundError: No module named 'pydotplus'
>>> from sklearn.externals.six import StringIO
>>> from sklearn.tree import export_graphviz
>>> import pydotplus
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ModuleNotFoundError: No module named 'pydotplus'
>>> export_graphviz(dtree, out_file=dot_data,  
...                 filled=True, rounded=True,
...                 special_characters=True)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'dtree' is not defined
>>> ls
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'ls' is not defined
>>> clf_gini.predict([[4, 4, 3, 3]]) 
array(['R'], dtype=object)
>>> y_pred = clf_gini.predict(X_test) 
>>> y_pred
array(['R', 'L', 'R', 'R', 'R', 'L', 'R', 'L', 'L', 'L', 'R', 'L', 'L',
       'L', 'R', 'L', 'R', 'L', 'L', 'R', 'L', 'R', 'L', 'L', 'R', 'L',
       'L', 'L', 'R', 'L', 'L', 'L', 'R', 'L', 'L', 'L', 'L', 'R', 'L',
       'L', 'R', 'L', 'R', 'L', 'R', 'R', 'L', 'L', 'R', 'L', 'R', 'R',
       'L', 'R', 'R', 'L', 'R', 'R', 'L', 'L', 'R', 'R', 'L', 'L', 'L',
       'L', 'L', 'R', 'R', 'L', 'L', 'R', 'R', 'L', 'R', 'L', 'R', 'R',
       'R', 'L', 'R', 'L', 'L', 'L', 'L', 'R', 'R', 'L', 'R', 'L', 'R',
       'R', 'L', 'L', 'L', 'R', 'R', 'L', 'L', 'L', 'R', 'L', 'R', 'R',
       'R', 'R', 'R', 'R', 'R', 'L', 'R', 'L', 'R', 'R', 'L', 'R', 'R',
       'R', 'R', 'R', 'L', 'R', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'R',
       'R', 'R', 'R', 'L', 'R', 'R', 'R', 'L', 'L', 'R', 'L', 'R', 'L',
       'R', 'L', 'L', 'R', 'L', 'L', 'R', 'L', 'R', 'L', 'R', 'R', 'R',
       'L', 'R', 'R', 'R', 'R', 'R', 'L', 'L', 'R', 'R', 'R', 'R', 'L',
       'R', 'R', 'R', 'L', 'R', 'L', 'L', 'L', 'L', 'R', 'R', 'L', 'R',
       'R', 'L', 'L', 'R', 'R', 'R'], dtype=object)
>>> 
>>> 2
2
>>> y_pred_en = clf_entropy.predict(X_test)
>>> y_pred_en
array(['R', 'L', 'R', 'L', 'R', 'L', 'R', 'L', 'R', 'R', 'R', 'R', 'L',
       'L', 'R', 'L', 'R', 'L', 'L', 'R', 'L', 'R', 'L', 'L', 'R', 'L',
       'R', 'L', 'R', 'L', 'R', 'L', 'R', 'L', 'L', 'L', 'L', 'L', 'R',
       'L', 'R', 'L', 'R', 'L', 'R', 'R', 'L', 'L', 'R', 'L', 'L', 'R',
       'L', 'L', 'R', 'L', 'R', 'R', 'L', 'R', 'R', 'R', 'L', 'L', 'R',
       'L', 'L', 'R', 'L', 'L', 'L', 'R', 'R', 'L', 'R', 'L', 'R', 'R',
       'R', 'L', 'R', 'L', 'L', 'L', 'L', 'R', 'R', 'L', 'R', 'L', 'R',
       'R', 'L', 'L', 'L', 'R', 'R', 'L', 'L', 'L', 'R', 'L', 'L', 'R',
       'R', 'R', 'R', 'R', 'R', 'L', 'R', 'L', 'R', 'R', 'L', 'R', 'R',
       'L', 'R', 'R', 'L', 'R', 'R', 'R', 'L', 'L', 'L', 'L', 'L', 'R',
       'R', 'R', 'R', 'L', 'R', 'R', 'R', 'L', 'L', 'R', 'L', 'R', 'L',
       'R', 'L', 'R', 'R', 'L', 'L', 'R', 'L', 'R', 'R', 'R', 'R', 'R',
       'L', 'R', 'R', 'R', 'R', 'R', 'R', 'L', 'R', 'L', 'R', 'R', 'L',
       'R', 'L', 'R', 'L', 'R', 'L', 'L', 'L', 'L', 'L', 'R', 'R', 'R',
       'L', 'L', 'L', 'R', 'R', 'R'], dtype=object)
>>> print "Accuracy is ", accuracy_score(y_test,y_pred)*100
  File "<stdin>", line 1
    print "Accuracy is ", accuracy_score(y_test,y_pred)*100
                       ^
SyntaxError: invalid syntax
>>> 
>>> 1
1
>>> print ("Accuracy is ", accuracy_score(y_test,y_pred_en)*100)
Accuracy is  70.74468085106383
>>> 
